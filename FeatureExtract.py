#!/usr/bin/python

from Config import *
from xml.dom import minidom
from AxmlParserPY import axmlprinter
from os import getcwd
from Features import *
from re import match
from dexterity.dx.dex import Dex
from dexterity.dx.bytestream import ByteStream
from dexterity.dx.dxlib import dxlib
from dexterity.dx.printer import DexPrinter

class FeatureExtract:
	
	@staticmethod
	def _getFeatures(xmlFeatures,dsFeatures): return xmlFeatures+dsFeatures
	
	@staticmethod
	def _getXML(): return minidom.parseString(axmlprinter.AXMLPrinter(open(MANIFEST, 'rb').read()).getBuff())
	
	@staticmethod
	def _parseXML(xmlDom):
		xmlIntents,xmlPermissions,i = {},{},0
		for intent in xmlDom.getElementsByTagName('action'):
			intent = intent.toxml()
			intent = intent[intent.rfind(".")+1:intent.rfind("\"")]
			xmlIntents[intent] = i
			i += 1
		i = 0
		for permission in xmlDom.getElementsByTagName("uses-permission"):
			permission = permission.toxml()
			permission = permission[permission.rfind(".")+1:permission.rfind("\"")]
			xmlPermissions[permission] = i
			i += 1
		return xmlPermissions,xmlIntents
		
	@staticmethod
	def _featureExtractXML():
		xmlDom         = FeatureExtract._getXML()
		xmlFeatures    = []       
		## Parse xml ##
		(xmlPermissions,xmlIntents) = FeatureExtract._parseXML(xmlDom)
		for permission in PERMISSIONS: xmlFeatures.append(1 if permission in xmlPermissions else 0)
		for intent     in INTENTS:     xmlFeatures.append(1 if intent in xmlIntents else 0)
		return xmlFeatures
		
		
	@staticmethod
	def _featureExtracSD(): pass
		
				
		
