#!/usr/bin/python
# -*- coding: utf-8 -*-

from Config import *
from zipfile import ZipFile
from os import listdir,chdir,getcwd
from shutil import rmtree as removeFolder
import FeatureExtract
from pickle import dump

class Preprocess:
	
	@staticmethod
	def _parseAllRawApks():
		antPath = getcwd()
		raw_train_samples = []
		raw_test_samples  = []
		raw_test_names    = []
		if VERBOSE: print "***** Processing train files... *****\n"
		## RAW_TRAIN_MALWARE ##
		if VERBOSE: print "***** Preprocessing raw_train_malware... *****\n"
		for zapk in listdir(PATH_RAW_TRAIN_MALWARE_SAMPLES):
			Preprocess._extractApk(PATH_RAW_TRAIN_MALWARE_SAMPLES,zapk)		
			chdir(PATH_RAW_TRAIN_MALWARE_SAMPLES+zapk[0:-4])		
			raw_train_samples.append((FeatureExtract.FeatureExtract._featureExtract(),1))
			chdir(antPath)
			removeFolder(PATH_RAW_TRAIN_MALWARE_SAMPLES+zapk[0:-4])
			if VERBOSE: print "File:",zapk,"processed."
		if VERBOSE: print "[OK]\n\n"
		## RAW_TRAIN_NO_MALWARE ##
		if VERBOSE: print "***** Preprocessing raw_train__no_malware... *****\n"
		for zapk in listdir(PATH_RAW_TRAIN_NO_MALWARE_SAMPLES):
			Preprocess._extractApk(PATH_RAW_TRAIN_NO_MALWARE_SAMPLES,zapk)		
			chdir(PATH_RAW_TRAIN_NO_MALWARE_SAMPLES+zapk[0:-4])
			raw_train_samples.append((FeatureExtract.FeatureExtract._featureExtract(),0))
			chdir(antPath)
			removeFolder(PATH_RAW_TRAIN_NO_MALWARE_SAMPLES+zapk[0:-4])
			if VERBOSE: print "File:",zapk,"processed."
		if VERBOSE: print "[OK]\n\n"
		if VERBOSE: print "***** Processing test files... *****\n"
		## RAW_TEST #
		if VERBOSE: print "***** Preprocessing raw_test... *****\n"
		for zapk in listdir(PATH_RAW_TEST_SAMPLES):
			raw_test_names.append(zapk)
			Preprocess._extractApk(PATH_RAW_TEST_SAMPLES,zapk)		
			chdir(PATH_RAW_TEST_SAMPLES+zapk[0:-4])
			raw_test_samples.append(FeatureExtract.FeatureExtract._featureExtract())
			chdir(antPath)
			removeFolder(PATH_RAW_TEST_SAMPLES+zapk[0:-4])
			if VERBOSE: print "File:",zapk,"processed."
		if VERBOSE: print "[OK]\n\n"
		return (raw_test_samples,raw_train_samples,raw_test_names)
		
	@staticmethod	
	def _extractApk(folder,name):
		with ZipFile(folder+name,"r") as zapk:
			zapk.extractall(folder+name[0:-4])
